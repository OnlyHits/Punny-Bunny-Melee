name: Build Releases

permissions:
  contents: write

on:
  workflow_dispatch:
    inputs:
      buildPlatform:
        description: 'Target platform (windows, linux, web or leave blank for all)'
        required: false
        default: ''

jobs:
  buildOnMultiplePlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./
    strategy:
      fail-fast: true
      matrix:
        targetPlatform: ${{ fromJSON(
          inputs.buildPlatform == 'windows' && '["StandaloneWindows64"]' ||
          inputs.buildPlatform == 'linux' && '["StandaloneLinux64"]' ||
          inputs.buildPlatform == 'web' && '["WebGL"]' ||
          '["StandaloneWindows64","StandaloneLinux64","WebGL"]') }}
    
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
          submodules: recursive
          ssh-key: ${{ secrets.PRIVATE_SSH_KEY  }} # Because the repo is private
      
      - name: get-previous-tag
        id: previoustag
        uses: 'WyriHaximus/github-action-get-previous-tag@v1'
        with:
          fallback: 0.0.0 # Optional fallback tag to use when no tag on first release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: get-next-version
        id: next
        uses: 'WyriHaximus/github-action-next-release-version@1.0.0'
        with:
          version: ${{ steps.previoustag.outputs.tag }}

      - name: caching-library
        uses: actions/cache@v3
        with:
          path: Library/
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}
            Library-

      - name: create-logs-dir
        run: mkdir -p Logs

      - name: build-project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: -logFile ./Logs/Editor.log

      - name: Collect Unity Editor log
        if: always()
        run: |
          mkdir -p Logs
          LOG="$HOME/.config/unity3d/Editor.log"
          if [ -f "$LOG" ]; then
            cp "$LOG" Logs/Editor.log
          else
            echo "No Editor.log found at $LOG"
          fi

      - name: upload-unity-logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: UnityLogs-${{ matrix.targetPlatform }}
          path: |
            Logs/**
          if-no-files-found: warn
          retention-days: 7

      - name: upload-build
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

      - name: zip-artifact
        run: zip build-${{ matrix.targetPlatform }}.zip ./build/${{ matrix.targetPlatform }}/* -r

      - name: create-release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          tag_name: ${{ matrix.targetPlatform }}-${{ steps.next.outputs.version }}
          release_name: Release-${{ matrix.targetPlatform }}-v0.0.${{ steps.next.outputs.version }}
          commitish: main
          #body_path: CHANGELOG.md # optional description
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload-release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-${{ matrix.targetPlatform }}.zip
          asset_name: Release-${{ matrix.targetPlatform }}.zip
          asset_content_type: application/gzip
        env:
          GITHUB_TOKEN: ${{ github.token }}
